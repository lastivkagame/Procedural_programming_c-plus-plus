#include <iostream>
using namespace std;

void ShowHello()
{
	cout << "Hello!\n";
}

int GetRandomNumber()
{
	return rand();
}

char ToSymbol(int index)
{
	char symbol = index;
	return symbol;
}

void ShowSquare(int number)
{
	cout << number << "^2 = " << number * number << endl;
}

int main()
{
	setlocale(LC_ALL, "rus"); //підключення російської мови

	//Ми описуємо функції не просто так. Ми це робимо, щоб користуватись ними.
	//А точніше викликати.

	//Синтаксис виклику функції:
	//Ім'я_Функції(Список_Параметрів);

	//1.Спробуємо викликати функцію ShowHello. Вона не приймає ніяких параметрів, тому
	//  при виклику дужки залишаємо пустими
	//Виклик функцій, які НІЧОГО не повертають
	ShowHello(); //на екрані Hello

	//2. Спробуємо викликати функцію GetRandomNumber. Вона не приймає ніяких параметрів,
	//   тому дужки залишаємо пустими. Але вона повертає значення на місце свого виклику (int).
	GetRandomNumber();                  //повернеться рандомне значення в "нікуди"
	int randNumber = GetRandomNumber(); //повернеться рандомне значення і запишеться у змінну
	cout << GetRandomNumber() << endl;  //повернеться рандомне значення зразу на екран

	//3. Спробуємо викликати функцію ShowSquare. Вона приймає один параметр (int), отже дужки
	//   пустими залишати не можна. Але вона нічого не повертає
	ShowSquare();        //помилка, функція має приймати значення типу int
	ShowSquare(2, 3, 4); //помилка, функція приймає лише ОДНЕ значення. Тут же їх 3.
	ShowSquare(2);       //все добре, на екрані буде 2^2 = 4
	int square = ShowSquare(5); //функція нічого не повертає (void). Ми не можемо записати квадрат в змінну
	
	//4. Спробуємо викликати функцію, яка і приймає параметри, і повертає значення
	ToSymbol();                   //помилка. Функція має прийняти 1 параметр
	ToSymbol(100);                //добре, але значення повертає в "нікуди"
	int symbol = ToSymbol(100);   //добре, функція поверне символ, індекс якого рівний 100
	cout << ToSymbol(50) << endl; //добре, функція поверне символ, індекс якого рівний 50, зразу на екран

	return 0;
}