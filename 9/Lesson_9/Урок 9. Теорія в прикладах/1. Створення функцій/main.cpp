#include <iostream>
using namespace std;

//Функція - це спеціальна конструкція, яка об'єднує код під одне ім'я. Викликати
//          код можна завдяки написанню імені фунцкії.

//Синтаксис створення функцій:
/*
Тип_Повертаючого_Значення Ім'я_Функції(Список_параметрів)
{
	якийсь код
}
*/

//Перший варіант створення функцій: створення ДО функції main()

//1. Функція не повертає ніякого значення (void), має ім'я (ShowHello), не має параметрів (пусті дужки)
void ShowHello()
{
	cout << "Hello!\n";
}

//2.Функція повертає значення (int), має ім'я (GetRandomNumber), не має параметрів (пусті дужки)
int GetRandomNumber()
{
	return rand();
}

//3. Функція повертає значення (char), має ім'я (ToSymbol), має один параметр
char ToSymbol(int index)
{
	char symbol = index;
	return symbol;
}

//4. Функція не повертає ніякого значення (void), має ім'я (Square), має один параметр
void ShowSquare(int number)
{
	cout << number << "^2 = " << number * number << endl;
}

//Зауваження 1: якщо функція повертає якесь значення, в її описі ОБОВ'ЯЗКОВО має бути
//              оператор return!

//Зауваження 2: функція може приймати любу кількість параметрів любого типу, наприклад:
void function(int a, int b, float c)
{
	/*Якийсь код*/
}

//Зауваження 3: якщо повертаюче значення фунцкії void, то можна писати просто return;
void SomeFuntion(int number)
{
	if (number == 0)
	{
		return; //на цьому рядку функція просто негайно завершить свою роботу
	}

	cout << "Your number = " << number << endl;
}

//тепер про функцію main ви знаєте більше:
//1. Вона повертає цілочисельне значення (int і return 0)
//2. У неї є ім'я (main)
//3. Вона не має параметрів (пусті дужки)
//4. Ми її тіло описуємо самі (код пишемо всередині фігурних дужок)
//5. Ця функція є головною (запускається системою сама перша)
int main() 
{
	/*Якийсь код*/
	return 0;
}