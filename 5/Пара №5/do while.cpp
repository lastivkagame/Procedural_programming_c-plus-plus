#include <iostream>
using namespace std;

int main()
{
	// Якщо не знаєте про цикл while, то спочатку відкрийте інший файл.

	// Цикл do while відрізняється від while двома речами: синтаксисом і оберненою дією.

	// Синтаксис створення циклу do while:
	/*
	do
	{
		Дія
	} while (умова);
	*/

	// Робота циклу do while: СПОЧАТКУ виконується дія, ПОТІМ перевіряється умова
	// Робота циклу while:    СПОЧАТКУ перевіряється умова, ПОТІМ виконується дія

	// З визначення роботи стає ясно наступне:
	// 1) Цикли обернені. Там перевіряється умова спочатку, а там дія.
	// 2) В циклі do while дія ОДИН раз полюбому виконається, навіть якщо умова брехлива.

	// Де ж використовувати цикл do while а де while?
	// Відповідь проста: якщо у вас в дії циклу користувач вводить значення, які використовуються
	//                   в умові, то використовуйте do while. Інакше while.

	// Приклад: користувачу виводяться пункти меню гри. Він має вибрати їх. Реалізуємо це через while.
	int choice;
	while (choice != 0)
	{
		cout << "1 - Start game \n";
		cout << "2 - Options    \n";
		cout << "0 - Quit       \n";
		cin >> choice;
	}

	// В цьому коді є проблема і він не запуститься. Діло в тому що в користувач має вийти із "гри"
	// коли введе число 0 (це видно по умові). Але в циклі while спочатку перевіряється УМОВА.
	// А що має комп'ютер порівнювати з числом 0, якщо користувач ще нічого не ввів?
	// В Visual Studio 2019 вам компілятор підкреслить зеленою хвилястою лінією умови і скаже
	// що змінна choice не ініціалізована, тобто не має значення.

	// Щоб вирішить цю задачу, можна дати змінній choice якесь початкове значення, щоб просто
	// запустити цикл.
	int choice2 = 1;
	while (choice2 != 0)
	{
		cout << "1 - Start game \n";
		cout << "2 - Options    \n";
		cout << "0 - Quit       \n";
		cin >> choice2;
	}

	// Але цей код виглядає не гарно. Чому там 1? Чому не 2? Чому взагалі там якесь початкове число,
	// якщо це число має вводити користувач?! Ось тут і приходить на допомогу do while:
	int choice3;
	do
	{
		cout << "1 - Start game \n";
		cout << "2 - Options    \n";
		cout << "0 - Quit       \n";
		cin >> choice3;

	} while (choice3 != 0);

	// В даному коді спочатку виконується дія, тому змінна choice3 буде мати значення перед перевіркою
	// в умові.

	// Зауваження №1: цикл do while, як і інші цикли і оператор if, вимагає лише один оператор. Це означає,
	//                що якщо у вас в дії лише один рядок (одна крапка з комою), то дужки можна не ставити,
	//                АЛЕ саме в цьому циклі це буде виглядати менш зрозуміліше, ніж без них. Я НІКОЛИ
	//                не пишу цикл do while без фігурних дужок і вам раджу.

	// Зауваження №2: умова циклу do while нічим не відрізняється від умови інших циклів чи if. Там може
	//                бути любий вираз.

	// Зауваження №3: зауважте що в кінці циклу do while стоїть крапка з комою, яка свідчить про закінчення
	//                конструкції циклу. Без неї у вас буде помилка на етапі компіляції.

	return 0;
}