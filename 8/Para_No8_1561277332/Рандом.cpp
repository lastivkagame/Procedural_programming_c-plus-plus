#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main()
{
	// Згадайте азартні карточні ігри. Кожного разу, коли ви починаєте грати, колода карт зовсім
	// інша і ви не зможете вирахувати, яка карта наступна з самого початку.
	// Згадайте гру сапер. Міни в ньому розміщаються в рандомних точках, які ви вирахувати завчасно не зможете.
	// Згадайте морський бій. Ви ніколи не дізнаєтесь, де находяться кораблі, бо їх розміщення є рандомним.

	// Рандом - це дуже важливий елемент як ігор так і багатьох програм. Він допомагає робити програми/ігри
	// більш цікавими і спрощує роботу. Представте ситуацію, що у вас є масив із 1000 елементів і всіх
	// треба заповнити. Робити це з клавіатури? Ні. Задавати сталі значення? Так це не цікаво.
	// Треба вміти використовувати рандом. От було би добре, якби комп'ютер сам заповнив ці елементи
	// рандомними числами. Але як ним користуватись?

	// Є спеціальні функції, які знаходяться в бібліотеці cstdlib. Ця бібліотека вже знаходиться всередині
	// бібліотеки iostream. Але я явно в рядку №2 підключив її. Гляньте.
	// В цій бібліотеці є багато функцій, але нас цікавлять лише дві: rand, srand.

	// Функція rand нічого не приймає і повертає рандомне значення типу int в діапазоні 0...32767. Цього діапазону
	// нам хватить на всі задачі. Щоб викликати цю функцію, треба написати її назву і пусті дужки.

	// Приклади:
	cout << rand() << endl; // одне рандомне число
	cout << rand() << endl; // друге рандомне число
	cout << rand() << endl; // третє рандомне число

	int number1 = rand(); // в змінну запишеться рандомне значення
	int number2 = rand(); // в змінну запишеться інше рандомне значення

	cout << number1 << " " << number2 << endl;

	// Але виникає одна проблема: запустіть цей код. Подивіться на числа. Вони дійсно рандомні.
	// А тепер запустіть знову. Ви побачите знову ті самі рандомні числа. Чому? Тому що комп'ютер
	// для придумування рандому має відштовхуватись від якоїсь початкової точки. І ця точка у нього
	// завжди стала і не міняється від запусків програми. Нам треба її поміняти.

	// Функція rand приймає число, від якого буде відштовхуватись рандом комп'ютера, і нічого не повертає.
	// Приклад:
	srand(5); // нехай комп'ютер відштовхується від числа 5
	cout << rand() << endl;
	cout << rand() << endl;
	// Запустіть ці 2 рядочка спочатку без srand, а потім з ним. Ви замітитите що рандом помінявся.
	// Але проблема вирішена лише наполовину. Коли ви міняєте точку рандома, вона все ще залишаєтся сталою
	// між запусками програми, тому рандом все ще не "унікальний". Нам треба взяти якесь значення, яке
	// буде мінятись МІЖ запусками програми. І це час.

	// Існує бібліотека ctime, в якій находяться багато функцій і не тільки, пов'язаних з часом. Але нам
	// треба лише одна із них - функція time. Я в рядку №3 підключив цю бібліотеку.

	// Функція time приймає вказівник на тип time_t і повертає кількість секунд, які пройшли з певної дати
	// 1 січня 1970 року. Погодтесь, що перед кожним запуском програми ця кількість буде іншою. Нас зараз
	// цікавить саме те, як дістати цю кількість а не те що ця функція приймає. Щоб скористись нею, напишіть:
	cout << time(nullptr); // на екрані ця кількість секунд. Позапускайте декілька разів цю програму і це
	                       // число буде мінятись.

	// Це те, що нам треба. Ми можем засунути це значення в нашу функцію srand. Ось так:
	srand(time(nullptr));
	cout << rand() << endl;
	cout << rand() << endl;

	// Тепер з рядка №61 весь рандом у вас буде новий.

	// Зауваження: щоб користуватись рандомом, вам треба підключити бібліотеки cstdlib i ctime. Далі щоб
	//             рандом був постійно новий, ось цей рядок №61 пишіть ЗАВЖДИ на початку функції main.

	// Більш за все, що у ваших задачах такий діапазон рандому не буде підходити. Та й навіщо такий великий
	// діапазон? А як зробити від 0 до 10? А як від -5 до 5? Є дві формули:

	// ВІД 0 ДО Х (не включно): rand() % X
	for (int i = 0; i < 20; i++)
		cout << rand() % 20 << " "; // на екрані рандомні числа від 0 до 20 (не включно)
	cout << endl;

	// ВІД Y до X (не включно): rand() % (X - Y) + Y
	for (int i = 0; i < 20; i++)
		cout << rand() % (10 - 5) + 5; // на екрані рандомні числа від 5 до 10 (не включно)
	cout << endl;

	// Зауваження: дію в дужках можна і порахувати:
	for (int i = 0; i < 20; i++)
		cout << rand() % 5 + 5; // на екрані рандомні числа від 5 до 10 (не включно)
	cout << endl;

	return 0;
}