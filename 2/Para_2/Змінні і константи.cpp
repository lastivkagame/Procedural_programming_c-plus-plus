#include <iostream>
using namespace std;

int main()
{
	// Щоб ваша програма могла зберігати якусь інформацію, вам треба виділити в пам'яті місце під цю інформацію.
	// Перед тим як виділяти місце, визначте, якого типу буде ця інформація. Якщо це вік, то підійде цілочисельний
	// тип. Якщо це вага, підійде дробовий тип і т.д.

	// Щоб програма могла зберігати інформацію, вам треба створити змінну або константу.

	// Змінна - це область в оперативній пам'яті, яка має ім'я, тип даних, та значення, яке МОЖНА змінити.
	// Константа - це область в оперативній пам'яті, яка має ім'я, тип даних, та значення, яке НЕ можна змінити.

	// Синтаксис створення змінної:
	// 1 варіант -> Тип_Данних Ім'я_Змінної;
	// 2 варіант -> Тип_Данних Ім'я_Змінної = Значення; <- цей варіант називається ІНІЦІАЛІЗАЦІЯ

	// Зауваження: якщо ви створите змінну по 1 варіанті, в неї запишеться "сміття" - зазвичай велике від'ємне значення.

	// Приклади:
	int age = 22;
	double weight = 72.5;
	int userKey; // тут записано сміття

	// Ім'я у змінної таке, тому що значення в цій області можна міняти.
	int a;  // поки що в області "а" записано сміття
	a = 10; // тепер 10
	a = 20; // а тепер 20

	// Синтаксис створення константи:
	// const Тип_Данних Ім'я_Константи = Значення;

	// Зауваження: ви не можете створити константу БЕЗ значення.

	// Приклади:
	const int MAX = 10;
	const double PI = 3.1415;
	const int SIZE = 1000;

	// Зауваження: задавати значення константам після створення НЕ МОЖНА.
	const int SOME_CONST = 4;
	SOME_CONST = 5; // помилка на етапі компіляції

	// ПРАВИЛО №2: називайте змінні по правилу camelCase (Кемл кейс). Суть цього правила в тому, що якщо ім'я змінної має
	//             одне слово - всі букви є маленькими. Якщо ім'я складається з 2 або більше слів - перше слово з маленької,
	//             кожне наступне з великої.

	// Правильно:
	int key;
	int someNumber;
	int row;
	int myLastChance;

	// Не правильно:
	int KEY;
	int SOME_NUMBER;
	int RoW;
	int mYlasTchancE;

	// ПРАВИЛО №3: називайте константи по правилу UPPER_CASE (Апер кейс). Суть цього правила в тому, що якщо ім'я константи має
	//             одне слово - всі букви з великої. Якщо 2 і більше слів - між словами ставиться "_".

	// Правильно:
	const int MAX_SIZE = 5;
	const int DAYS_IN_WEEK = 7;
	const double MAX_TEMPERATURE = 38.9;

	// Не правильно:
	const int MAXSIZE = 5;
	const int DAYS_IN_week = 7;
	const double Max_Temperature = 38.9;

	// Правило №4: давайте змінним зрозумілі і логічні назви, щоб по назві було зрозуміло, для чого ця змінна/константа.

	// Всі наведені вище приклади правильні. А ось не правильні:
	int asfdasd;
	int b;
	int qwe_qwe123;

	// Правило №5: якщо вам треба зберегти інформацію в програмі, і ви знаєте, що значення цієї інформації не зміниться, то
	//             створюйте константу.

	// Правила називання змінних/констант:
	// 1. Використовуйте англійські букви (інші також можна, але не бажано) і лише їх.
	// 2. Любі символи окрім букв, цифр і знака "_" використовувати не можна.
	// 3. В назві змінної не можна використовувати пробіл.
	// 4. Не створюйте в одному коді змінні з однаковою назвою (їх можна створювати, але в яких випадках - дізнаєтесь пізніше).

	// cout може виводити не тільки текст, але й значення змінних/констант. Для цього треба просто написати їх ім'я:
	int myAge = 22;
	cout << "My age: " << myAge << endl; // на екрані My age: 22
	
	// Зауваження: замітьте, що між іменем змінної і текстом стоїть "<<". Завжди відділяйте змінні від змінних і від тексту при виводі.

	// Нагадування: якщо виводите текст, то використовуйте \n замість << endl при переході на новий рядок:
	cout << "Some text.\n";       // правильно бо коротше
	cout << "Some text." << endl; // не правильно, бо довше

	// Правило №6: якщо виводите значення змінної, то використовуйте << endl замість \n при переході на новий рядок:
	cout << myAge << endl; // правильно, бо швидче писати
	cout << myAge << "\n"; // не правильно, бо довше писати (із-за того, що слеш і лапки знаходяться не в зручному місці на клавіатурі)

	// Якщо треба створити декілька ЛОГІЧНО-ПОВ'ЯЗАНИХ змінних з однаковим типом даних, то можно зробити це через кому:
	int minNumber, maxNumber;

	// В цьому файлі ви побачили як задавати значення цілочисельним і дробовим змінним. Які ще бувають значення, ви дізнаєтесь
	// у файлі "ЛІТЕРАЛИ". Переходьте туди.

	return 0;
}