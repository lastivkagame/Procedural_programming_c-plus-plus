#include <iostream>
using namespace std;

//Прототипи 
template <typename T>
void Show(T arr[], int size);       //показ одновимірного масиву
template <typename T>
void SelectSort(T arr[], int size); //сортування одновимірного масиву

int main()
{
	setlocale(LC_ALL, "rus"); //підключення російської мови

	const int SIZE = 10;
	int arr1[SIZE] = { 10,9,3,5,11,234,-12,5,4,1 }; //одновимірний масив

	cout << "Одномерный массив до сортировки:\n";
	Show(arr1, SIZE);

	SelectSort(arr1, SIZE); //сортуємо

	cout << "Одномерный массив после сортировки:\n";
	Show(arr1, SIZE);

	system("pause");
	return 0;
}

template <typename T> 
void Show(T arr[], int size) //показ одновимірного масиву
{
	for (int i = 0; i < size; i++)
		cout << arr[i] << " ";

	cout << endl;
}
template <typename T> 
void SelectSort(T arr[], int size)
{
	//Завдяки змінній i ми проходимось по всім елементам (від 0 до size - 1)
	int i;

	//Завдяки змінній j ми перевіряємо всі елементи з i-тим (від i + 1 до size)
	int j;

	//Завдяки змінній m ми запам'ятовуємо індекс найменшого значення в діапазоні (i + 1, size)
	int min;

	//Завдяки змінній temp ми запам'ятовуємо значення найменшого елементу, щоб поміняти його
	//місцями з i-им елементом.
	T temp;

	//беремо кожний елемент (починаючи з нульового)
	for (i = 0; i < size; i++)
	{
		//З кожний кроком вважаємо що i-тий елемент є найменшим значенням, тому зберігаємо його
		//індекс і значення
		min = i;       
		temp = arr[i]; 

		//перевіряємо і-тий елемент з усіма наступними, шукаючи значення менше з нього
		for (j = i + 1; j < size; j++)
		{
			//ЗАУВАЖЕННЯ: < - сортування по зростанню, > - сортування по зменшенню
			if (arr[j] < temp) //якщо найшли елемент менший за даний
			{
				//то мінімальним є вже він
				min = j;       //заповнюємо його індекс
				temp = arr[j]; //заповнюємо його значення
			}
		}

		//після находження мінімального значення, міняємо елемент "i" з данним
		arr[min] = arr[i];
		arr[i] = temp;
	}
}
